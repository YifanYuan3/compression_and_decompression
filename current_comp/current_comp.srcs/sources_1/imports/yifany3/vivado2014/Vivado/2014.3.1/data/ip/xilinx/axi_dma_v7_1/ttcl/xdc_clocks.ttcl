<: ;#Component and file information :>
<: set ComponentName [getComponentNameString] :>
<: setOutputDirectory "./" :>
<: setFileName [ttcl_add $ComponentName "_clocks"] :>
<: setFileExtension ".xdc" :>
<: setFileProcessingOrder late :>
<: set enable_mm2s [getBooleanValue "c_include_mm2s"] :>
<: set enable_s2mm [getBooleanValue "c_include_s2mm"] :>
<: set enable_async [getBooleanValue "c_prmry_is_aclk_async"] :>
<: set enable_sg [getBooleanValue "c_include_sg"] :>
<: set enable_micro [getBooleanValue "c_micro_dma"] :>
<: set mult_ch [getBooleanValue "c_enable_multi_channel"] :>
<: set enable_sts_ctrl [getBooleanValue "c_sg_include_stscntrl_strm"] :>
<: set lite_clk 100000000 :>
<: set sg_clk 100000000 :>
<: set mm2s_clk 100000000 :>
<: set s2mm_clk 100000000 :>
<: set lite_per_d [expr 1000000000.0 / $lite_clk] :>
<: set sg_per_d [expr 1000000000.0 / $sg_clk] :>
<: set mm2s_per_d [expr 1000000000.0 / $mm2s_clk] :>
<: set s2mm_per_d [expr 1000000000.0 / $s2mm_clk] :>
<: set lite_per_i [::tcl::mathfunc::int [::tcl::mathfunc::round [expr 1000 * $lite_per_d]]] :>
<: set sg_per_i [::tcl::mathfunc::int [::tcl::mathfunc::round [expr 1000 * $sg_per_d]]] :>
<: set mm2s_per_i [::tcl::mathfunc::int [::tcl::mathfunc::round [expr 1000 * $mm2s_per_d]]] :>
<: set s2mm_per_i [::tcl::mathfunc::int [::tcl::mathfunc::round [expr 1000 * $s2mm_per_d]]] :>
<: set lite_per [expr $lite_per_i / 1000.0] :>
<: set sg_per [expr $sg_per_i / 1000.0] :>
<: set mm2s_per [expr $mm2s_per_i / 1000.0] :>
<: set s2mm_per [expr $s2mm_per_i / 1000.0] :>
<: if {$enable_micro} { :>
<: set text BASIC :>
<: } else { :>
<: set text FULL :>
<: } :>
# file: <=: ComponentName :>.xdc
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
# 
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
# 
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
# 
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
# 
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
<: if { $enable_async } { :>
# Design is in Asynchronous. Following constraints needed in this mode.

<: if {$enable_mm2s} { :>
<: } :>
<: if {$enable_s2mm} { :>
<: } :>
<: if {$enable_sg} { :>
<: } :>

## INFO: Level CDC Crossing in AXI DMA


## Following constraints are needed for various ASYNC FIFOs

<: if {$enable_s2mm && $enable_sts_ctrl && $enable_sg} { :>

## Status stream

  set sts_wr_clock [get_clocks -of_objects [get_ports m_axi_s2mm_aclk]]
  set sts_rd_clock [get_clocks -of_objects [get_ports m_axi_sg_aclk]]

  set_false_path -from [filter [all_fanout -from [get_ports m_axi_s2mm_aclk] -flat -endpoints_only] {IS_LEAF}] -to [get_cells -hierarchical -filter {NAME =~*I_S2MM_STS_STREAM*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gdm.dm/gpr1.dout_i_reg[*]}]

  set_max_delay -from [get_cells -hierarchical -filter {NAME =~*I_S2MM_STS_STREAM*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_gc_reg[*]}] -to [get_cells -hierarchical -filter {NAME =~*I_S2MM_STS_STREAM*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].wr_stg_inst/Q_reg_reg[*]}] -datapath_only [get_property  -min PERIOD $sts_rd_clock]

  set_max_delay -from [get_cells -hierarchical -filter {NAME =~*I_S2MM_STS_STREAM*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_gc_reg[*]}] -to [get_cells -hierarchical -filter {NAME =~*I_S2MM_STS_STREAM*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].rd_stg_inst/Q_reg_reg[*]}] -datapath_only [get_property  -min PERIOD $sts_wr_clock]

<: } :>

<: if {$enable_mm2s && $enable_sts_ctrl && $enable_sg} { :>
## Control Stream

set ctrl_wr_clock [get_clocks -of_objects [get_ports m_axi_sg_aclk]]
set ctrl_rd_clock [get_clocks -of_objects [get_ports m_axi_mm2s_aclk]]

 set_false_path -from [filter [all_fanout -from [get_ports m_axi_sg_aclk] -flat -endpoints_only] {IS_LEAF}] -to [get_cells -hierarchical -filter {NAME =~*I_MM2S_CNTRL_STREAM*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gdm.dm/gpr1.dout_i_reg[*]}]

 set_max_delay -from [get_cells -hierarchical -filter {NAME =~*I_MM2S_CNTRL_STREAM*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_gc_reg[*]}] -to [get_cells -hierarchical -filter {NAME =~*I_MM2S_CNTRL_STREAM*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].wr_stg_inst/Q_reg_reg[*]}] -datapath_only [get_property  -min PERIOD $ctrl_rd_clock]

 set_max_delay -from [get_cells -hierarchical -filter {NAME =~*I_MM2S_CNTRL_STREAM*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_gc_reg[*]}] -to [get_cells -hierarchical -filter {NAME =~*I_MM2S_CNTRL_STREAM*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].rd_stg_inst/Q_reg_reg[*]}] -datapath_only [get_property  -min PERIOD $ctrl_wr_clock]

<: } :>

<: if {$enable_mm2s} { :>
## MM2S

set mm2s_sts_wr_clock [get_clocks -of_objects [get_ports m_axi_mm2s_aclk]]
<: if {$enable_sg} { :>
set mm2s_sts_rd_clock [get_clocks -of_objects [get_ports m_axi_sg_aclk]]
<: } else { :>
set mm2s_sts_rd_clock [get_clocks -of_objects [get_ports s_axi_lite_aclk]]
<: } :>

 set_max_delay -from [get_cells I_PRMRY_DATAMOVER/GEN_MM2S_<=:$text:>.I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_gc_reg[*]] -to [get_cells I_PRMRY_DATAMOVER/GEN_MM2S_<=:$text:>.I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].wr_stg_inst/Q_reg_reg[*]] -datapath_only [get_property  -min PERIOD $mm2s_sts_rd_clock]

 set_max_delay -from [get_cells I_PRMRY_DATAMOVER/GEN_MM2S_<=:$text:>.I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_gc_reg[*]] -to [get_cells I_PRMRY_DATAMOVER/GEN_MM2S_<=:$text:>.I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].rd_stg_inst/Q_reg_reg[*]] -datapath_only [get_property  -min PERIOD $mm2s_sts_wr_clock]

<: if {$enable_sg} { :>
set mm2s_cmd_wr_clock [get_clocks -of_objects [get_ports m_axi_sg_aclk]]
<: } else { :>
set mm2s_cmd_wr_clock [get_clocks -of_objects [get_ports s_axi_lite_aclk]]
<: } :>
set mm2s_cmd_rd_clock [get_clocks -of_objects [get_ports m_axi_mm2s_aclk]]

 set_max_delay -from [get_cells I_PRMRY_DATAMOVER/GEN_MM2S_<=:$text:>.I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/I_CMD_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_gc_reg[*]] -to [get_cells I_PRMRY_DATAMOVER/GEN_MM2S_<=:$text:>.I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/I_CMD_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].wr_stg_inst/Q_reg_reg[*]] -datapath_only [get_property  -min PERIOD $mm2s_cmd_rd_clock]

 set_max_delay -from [get_cells I_PRMRY_DATAMOVER/GEN_MM2S_<=:$text:>.I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/I_CMD_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_gc_reg[*]] -to [get_cells I_PRMRY_DATAMOVER/GEN_MM2S_<=:$text:>.I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/I_CMD_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].rd_stg_inst/Q_reg_reg[*]] -datapath_only [get_property  -min PERIOD $mm2s_cmd_wr_clock]

<: } :>

<: if {$enable_s2mm} { :>
#S2MM
set s2mm_sts_wr_clock [get_clocks -of_objects [get_ports m_axi_s2mm_aclk]]
<: if {$enable_sg} { :>
set s2mm_sts_rd_clock [get_clocks -of_objects [get_ports m_axi_sg_aclk]]
<: } else { :>
set s2mm_sts_rd_clock [get_clocks -of_objects [get_ports s_axi_lite_aclk]]
<: } :>

 set_max_delay -from [get_cells I_PRMRY_DATAMOVER/GEN_S2MM_<=:$text:>.I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_gc_reg[*]] -to [get_cells I_PRMRY_DATAMOVER/GEN_S2MM_<=:$text:>.I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].wr_stg_inst/Q_reg_reg[*]] -datapath_only [get_property  -min PERIOD $s2mm_sts_rd_clock]

 set_max_delay -from [get_cells I_PRMRY_DATAMOVER/GEN_S2MM_<=:$text:>.I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_gc_reg[*]] -to [get_cells I_PRMRY_DATAMOVER/GEN_S2MM_<=:$text:>.I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].rd_stg_inst/Q_reg_reg[*]] -datapath_only [get_property  -min PERIOD $s2mm_sts_wr_clock]

<: if {$enable_sg} { :>
set s2mm_cmd_wr_clock [get_clocks -of_objects [get_ports m_axi_sg_aclk]]
<: } else { :>
set s2mm_cmd_wr_clock [get_clocks -of_objects [get_ports s_axi_lite_aclk]]
<: } :>
set s2mm_cmd_rd_clock [get_clocks -of_objects [get_ports m_axi_s2mm_aclk]]

 set_max_delay -from [get_cells I_PRMRY_DATAMOVER/GEN_S2MM_<=:$text:>.I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/I_CMD_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_gc_reg[*]] -to [get_cells I_PRMRY_DATAMOVER/GEN_S2MM_<=:$text:>.I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/I_CMD_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].wr_stg_inst/Q_reg_reg[*]] -datapath_only [get_property  -min PERIOD $s2mm_cmd_rd_clock]

 set_max_delay -from [get_cells I_PRMRY_DATAMOVER/GEN_S2MM_<=:$text:>.I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/I_CMD_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_gc_reg[*]] -to [get_cells I_PRMRY_DATAMOVER/GEN_S2MM_<=:$text:>.I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/I_CMD_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].rd_stg_inst/Q_reg_reg[*]] -datapath_only [get_property  -min PERIOD $s2mm_cmd_wr_clock]

<: } :>

<: if {$mult_ch} { :>
set sg_clock [get_clocks -of_objects [get_ports m_axi_sg_aclk]]
<: if {$enable_mm2s} { :>

set mm2s_clock [get_clocks -of_objects [get_ports m_axi_mm2s_aclk]]
set_false_path -from [get_cells -hier *vsize_data_int_reg[*]] -to $mm2s_clock

 set_false_path -from [filter [all_fanout -from [get_ports m_axi_sg_aclk] -flat -endpoints_only] {IS_LEAF}] -to [get_cells -hierarchical -filter {NAME =~*TDEST_FIFO.I_INFO_FIFO*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gdm.dm/gpr1.dout_i_reg[*]}]

 set_max_delay -from [get_cells -hierarchical -filter {NAME =~*TDEST_FIFO.I_INFO_FIFO*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_gc_reg[*]}] -to [get_cells -hierarchical -filter {NAME =~*TDEST_FIFO.I_INFO_FIFO*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].wr_stg_inst/Q_reg_reg[*]}] -datapath_only [get_property  -min PERIOD $mm2s_clock]

 set_max_delay -from [get_cells -hierarchical -filter {NAME =~*TDEST_FIFO.I_INFO_FIFO*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_gc_reg[*]}] -to [get_cells -hierarchical -filter {NAME =~*TDEST_FIFO.I_INFO_FIFO*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].rd_stg_inst/Q_reg_reg[*]}] -datapath_only [get_property  -min PERIOD $sg_clock]

 set_max_delay -from [get_cells -hierarchical -filter {NAME =~*I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/CACHE_ENABLE*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_gc_reg[*]}] -to [get_cells -hierarchical -filter {NAME =~*I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/CACHE_ENABLE*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].wr_stg_inst/Q_reg_reg[*]}] -datapath_only [get_property  -min PERIOD $mm2s_clock]

 set_max_delay -from [get_cells -hierarchical -filter {NAME =~*I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/CACHE_ENABLE*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_gc_reg[*]}] -to [get_cells -hierarchical -filter {NAME =~*I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/CACHE_ENABLE*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].rd_stg_inst/Q_reg_reg[*]}] -datapath_only [get_property  -min PERIOD $sg_clock]
<: } :>
<: if {$enable_s2mm} { :>
set s2mm_clock [get_clocks -of_objects [get_ports m_axi_s2mm_aclk]]
set_false_path -from [get_cells -hier *vsize_data_int_reg[*]] -to $s2mm_clock
set_false_path -from [get_cells -hier *tdest_out_int_reg[*]] -to $sg_clock
set_false_path -from [get_cells -hier *same_tdest_b2b_reg] -to $sg_clock

 set_false_path -from [filter [all_fanout -from [get_ports m_axi_s2mm_aclk] -flat -endpoints_only] {IS_LEAF}] -to [get_cells -hierarchical -filter {NAME =~*INCLUDE_S2MM_GATE*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gdm.dm/gpr1.dout_i_reg[*]}]

 set_max_delay -from [get_cells -hierarchical -filter {NAME =~*INCLUDE_S2MM_GATE*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_gc_reg[*]}] -to [get_cells -hierarchical -filter {NAME =~*INCLUDE_S2MM_GATE*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].wr_stg_inst/Q_reg_reg[*]}] -datapath_only [get_property  -min PERIOD $sg_clock]

 set_max_delay -from [get_cells -hierarchical -filter {NAME =~*INCLUDE_S2MM_GATE*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_gc_reg[*]}] -to [get_cells -hierarchical -filter {NAME =~*INCLUDE_S2MM_GATE*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].rd_stg_inst/Q_reg_reg[*]}] -datapath_only [get_property  -min PERIOD $s2mm_clock]

 set_max_delay -from [get_cells -hierarchical -filter {NAME =~*I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/CACHE_ENABLE*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_gc_reg[*]}] -to [get_cells -hierarchical -filter {NAME =~*I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/CACHE_ENABLE*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].wr_stg_inst/Q_reg_reg[*]}] -datapath_only [get_property  -min PERIOD $s2mm_clock]

 set_max_delay -from [get_cells -hierarchical -filter {NAME =~*I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/CACHE_ENABLE*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_gc_reg[*]}] -to [get_cells -hierarchical -filter {NAME =~*I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/CACHE_ENABLE*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].rd_stg_inst/Q_reg_reg[*]}] -datapath_only [get_property  -min PERIOD $sg_clock]
<: } :>

<: } :>

<: } else { :>
# Design is synchronous. No constraints needed in this mode.
<: if {$enable_mm2s} { :>
<: } :>
<: if {$enable_s2mm} { :>
<: } :>
<: if {$enable_sg} { :>
<: } :>
<: if {$mult_ch} { :>
set sg_clock [get_clocks -of_objects [get_ports m_axi_sg_aclk]]
<: if {$enable_mm2s} { :>

set mm2s_clock [get_clocks -of_objects [get_ports m_axi_mm2s_aclk]]

 set_false_path -from [filter [all_fanout -from [get_ports m_axi_sg_aclk] -flat -endpoints_only] {IS_LEAF}] -to [get_cells -hierarchical -filter {NAME =~*TDEST_FIFO.I_INFO_FIFO*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gdm.dm/gpr1.dout_i_reg[*]}]

 set_max_delay -from [get_cells -hierarchical -filter {NAME =~*TDEST_FIFO.I_INFO_FIFO*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_gc_reg[*]}] -to [get_cells -hierarchical -filter {NAME =~*TDEST_FIFO.I_INFO_FIFO*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].wr_stg_inst/Q_reg_reg[*]}] -datapath_only [get_property  -min PERIOD $sg_clock]

 set_max_delay -from [get_cells -hierarchical -filter {NAME =~*TDEST_FIFO.I_INFO_FIFO*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_gc_reg[*]}] -to [get_cells -hierarchical -filter {NAME =~*TDEST_FIFO.I_INFO_FIFO*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].rd_stg_inst/Q_reg_reg[*]}] -datapath_only [get_property  -min PERIOD $mm2s_clock]

<: } :>
<: if {$enable_s2mm} { :>
set s2mm_clock [get_clocks -of_objects [get_ports m_axi_s2mm_aclk]]

 set_false_path -from [filter [all_fanout -from [get_ports m_axi_s2mm_aclk] -flat -endpoints_only] {IS_LEAF}] -to [get_cells -hierarchical -filter {NAME =~*INCLUDE_S2MM_GATE*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.mem/gdm.dm/gpr1.dout_i_reg[*]}]

 set_max_delay -from [get_cells -hierarchical -filter {NAME =~*INCLUDE_S2MM_GATE*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/rd_pntr_gc_reg[*]}] -to [get_cells -hierarchical -filter {NAME =~*INCLUDE_S2MM_GATE*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].wr_stg_inst/Q_reg_reg[*]}] -datapath_only [get_property  -min PERIOD $s2mm_clock]

 set_max_delay -from [get_cells -hierarchical -filter {NAME =~*INCLUDE_S2MM_GATE*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/wr_pntr_gc_reg[*]}] -to [get_cells -hierarchical -filter {NAME =~*INCLUDE_S2MM_GATE*/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gcx.clkx/gsync_stage[*].rd_stg_inst/Q_reg_reg[*]}] -datapath_only [get_property  -min PERIOD $sg_clock]

<: } :>

<: } :>

<: } :>
