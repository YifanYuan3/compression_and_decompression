<: ;#Component and file information :>
<: set ComponentName [getComponentNameString] :>
<: setOutputDirectory "./" :>
<: setFileName $ComponentName :>
<: setFileExtension ".xdc" :>
<: set c_family [getStringValue "c_family"] :>
<: set enable_mm2s [getBooleanValue "c_include_mm2s"] :>
<: set enable_s2mm [getBooleanValue "c_include_s2mm"] :>
<: set enable_async [getBooleanValue "c_prmry_is_aclk_async"] :>
<: set enable_sg [getBooleanValue "c_include_sg"] :>
<: set enable_micro [getBooleanValue "c_micro_dma"] :>
<: set enable_sts_ctrl [getBooleanValue "c_sg_include_stscntrl_strm"] :>
<: set mult_ch [getBooleanValue "c_enable_multi_channel"] :>
<: set lite_clk 100000000 :>
<: set sg_clk 100000000 :>
<: set old 0 :>
<: set mm2s_clk 100000000 :>
<: set s2mm_clk 100000000 :>
<: set lite_per_d [expr 1000000000.0 / $lite_clk] :>
<: set sg_per_d [expr 1000000000.0 / $sg_clk] :>
<: set mm2s_per_d [expr 1000000000.0 / $mm2s_clk] :>
<: set s2mm_per_d [expr 1000000000.0 / $s2mm_clk] :>
<: set lite_per_i [::tcl::mathfunc::int [::tcl::mathfunc::round [expr 1000 * $lite_per_d]]] :>
<: set sg_per_i [::tcl::mathfunc::int [::tcl::mathfunc::round [expr 1000 * $sg_per_d]]] :>
<: set mm2s_per_i [::tcl::mathfunc::int [::tcl::mathfunc::round [expr 1000 * $mm2s_per_d]]] :>
<: set s2mm_per_i [::tcl::mathfunc::int [::tcl::mathfunc::round [expr 1000 * $s2mm_per_d]]] :>
<: set lite_per [expr $lite_per_i / 1000.0] :>
<: set sg_per [expr $sg_per_i / 1000.0] :>
<: set mm2s_per [expr $mm2s_per_i / 1000.0] :>
<: set s2mm_per [expr $s2mm_per_i / 1000.0] :>
<: if {$enable_micro} { :>
<: set text BASIC :>
<: } else { :>
<: set text FULL :>
<: } :>
<: if {(($c_family == "kintexu" || $c_family == "virtexu" || $c_family == "artixu"))} { :>
<: set is_us_device 1 :>
<: } else { :>
<: set is_us_device 0 :>
<: } :>
# file: <=: ComponentName :>.xdc
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
# 
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
# 
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
# 
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
# 
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
<: if {$old} { :>
<: if { $enable_async } { :>
# Design is in Asynchronous. Following constraints needed in this mode.

<: if {$enable_mm2s} { :>
<: } :>
<: if {$enable_s2mm} { :>
<: } :>
<: if {$enable_sg} { :>
<: } :>

## INFO: Level CDC Crossing in AXI DMA

set_false_path -to [get_pins -hier *cdc_to*/D]
set_false_path -to [get_pins -hierarchical -filter {NAME =~*/*rstblk*/*RST_FULL_GEN_reg/CLR}]

## Following constraints are needed for various ASYNC FIFOs

<: if {$enable_s2mm && $enable_sts_ctrl && $enable_sg} { :>
<: if {$is_us_device == 0} { :>
## Status stream
  set_false_path -from [get_cells -hierarchical -filter {NAME =~*I_S2MM_STS_STREAM*/*rstblk*/*rst_reg_reg[*]}]
  set_false_path -to [get_pins -hierarchical -filter {NAME =~*I_S2MM_STS_STREAM*/*rstblk*/*PRE}] 
<: } else { :>
## Status stream
  set_false_path -from [get_cells -hierarchical -filter {NAME =~*I_S2MM_STS_STREAM*/*rstblk*/*rst_reg_reg[*]}]
  set_false_path -to [get_pins -hierarchical -filter {NAME =~*I_S2MM_STS_STREAM*/*rstblk*/*PRE}] 
<: } :>
<: } :>

<: if {$enable_mm2s && $enable_sts_ctrl && $enable_sg} { :>
<: if {$is_us_device == 0} { :>
## Control Stream
 set_false_path -from [get_cells -hierarchical -filter {NAME =~*I_MM2S_CNTRL_STREAM*/*rstblk*/*rst_reg_reg[*]}]
 set_false_path -to [get_pins -hierarchical -filter {NAME =~*I_MM2S_CNTRL_STREAM*/*rstblk*/*PRE}] 
<: } else { :>
## Control Stream
 set_false_path -from [get_cells -hierarchical -filter {NAME =~*I_MM2S_CNTRL_STREAM*/*rstblk*/*rst_reg_reg[*]}]
 set_false_path -to [get_pins -hierarchical -filter {NAME =~*I_MM2S_CNTRL_STREAM*/*rstblk*/*PRE}] 
<: } :>
<: } :>

<: if {$enable_mm2s} { :>
## MM2S
<: if {$is_us_device == 0} { :>
 set_false_path -from [get_cells -hierarchical -filter {NAME =~*I_PRMRY_DATAMOVER/GEN_MM2S_<=:$text:>.I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/*rstblk*/*rst_reg_reg[*]}]
 set_false_path -to [get_pins -hierarchical -filter {NAME =~*I_PRMRY_DATAMOVER/GEN_MM2S_<=:$text:>.I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/*rstblk*/*PRE}]
 set_false_path -from [get_cells -hierarchical -filter {NAME =~*I_PRMRY_DATAMOVER/GEN_MM2S_<=:$text:>.I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/I_CMD_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/*rstblk*/*rst_reg_reg[*]}]
 set_false_path -to [get_pins -hierarchical -filter {NAME =~*I_PRMRY_DATAMOVER/GEN_MM2S_<=:$text:>.I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/I_CMD_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/*rstblk*/*PRE}]
<: } else { :>
 set_false_path -from [get_cells -hierarchical -filter {NAME =~*I_PRMRY_DATAMOVER/GEN_MM2S_<=:$text:>.I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/*rstblk*/*rst_reg_reg[*]}]
 set_false_path -to [get_pins -hierarchical -filter {NAME =~*I_PRMRY_DATAMOVER/GEN_MM2S_<=:$text:>.I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/*rstblk*/*PRE}]
 set_false_path -from [get_cells -hierarchical -filter {NAME =~*I_PRMRY_DATAMOVER/GEN_MM2S_<=:$text:>.I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/I_CMD_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/*rstblk*/*rst_reg_reg[*]}]
 set_false_path -to [get_pins -hierarchical -filter {NAME =~*I_PRMRY_DATAMOVER/GEN_MM2S_<=:$text:>.I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/I_CMD_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/*rstblk*/*PRE}]
<: } :>
## MM2S

<: if {$enable_sg} { :>
<: } else { :>
<: } :>

<: if {$enable_sg} { :>
<: } else { :>
<: } :>
<: } :>
<: if {$enable_s2mm} { :>
## S2MM
<: if {$is_us_device == 0} { :>
 set_false_path -from [get_cells -hierarchical -filter {NAME =~*I_PRMRY_DATAMOVER/GEN_S2MM_<=:$text:>.I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/*rstblk*/*rst_reg_reg[*]}]
 set_false_path -to [get_pins -hierarchical -filter {NAME =~*I_PRMRY_DATAMOVER/GEN_S2MM_<=:$text:>.I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/*rstblk*/*PRE}]
 set_false_path -from [get_cells -hierarchical -filter {NAME =~*I_PRMRY_DATAMOVER/GEN_S2MM_<=:$text:>.I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/I_CMD_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/*rstblk*/*rst_reg_reg[*]}]
 set_false_path -to [get_pins -hierarchical -filter {NAME =~*I_PRMRY_DATAMOVER/GEN_S2MM_<=:$text:>.I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/I_CMD_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/*rstblk*/*PRE}]
<: } else { :>
 set_false_path -from [get_cells -hierarchical -filter {NAME =~*I_PRMRY_DATAMOVER/GEN_S2MM_<=:$text:>.I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/*rstblk*/*rst_reg_reg[*]}]
 set_false_path -to [get_pins -hierarchical -filter {NAME =~*I_PRMRY_DATAMOVER/GEN_S2MM_<=:$text:>.I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/GEN_INCLUDE_STATUS_FIFO.I_STS_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/*rstblk*/*PRE}]
 set_false_path -from [get_cells -hierarchical -filter {NAME =~*I_PRMRY_DATAMOVER/GEN_S2MM_<=:$text:>.I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/I_CMD_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/*rstblk*/*rst_reg_reg[*]}]
 set_false_path -to [get_pins -hierarchical -filter {NAME =~*I_PRMRY_DATAMOVER/GEN_S2MM_<=:$text:>.I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/I_CMD_FIFO/USE_ASYNC_FIFO.I_ASYNC_FIFO/I_ASYNC_FIFOGEN_FIFO/USE_2N_DEPTH.V6_S6_AND_LATER.I_ASYNC_FIFO_BRAM/*rstblk*/*PRE}]
<: } :>
## S2MM

<: if {$enable_sg} { :>
<: } else { :>
<: } :>
<: if {$enable_sg} { :>
<: } else { :>
<: } :>
<: } :>
<: if {$mult_ch} { :>
<: if {$enable_mm2s} { :>
<: if {$is_us_device == 0} { :>
  set_false_path -from [get_cells -hierarchical -filter {NAME =~*TDEST_FIFO.I_INFO_FIFO*/*rstblk*/*rst_reg_reg[*]}]
  set_false_path -to [get_pins -hierarchical -filter {NAME =~*TDEST_FIFO.I_INFO_FIFO*/*rstblk*/*PRE}]
  set_false_path -from [get_cells -hierarchical -filter {NAME =~*I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/CACHE_ENABLE*/*rstblk*/*rst_reg_reg[*]}]
  set_false_path -to [get_pins -hierarchical -filter {NAME =~*I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/CACHE_ENABLE*/*rstblk*/*PRE}]
<: } else { :>
  set_false_path -from [get_cells -hierarchical -filter {NAME =~*TDEST_FIFO.I_INFO_FIFO*/*rstblk*/*rst_reg_reg[*]}]
  set_false_path -to [get_pins -hierarchical -filter {NAME =~*TDEST_FIFO.I_INFO_FIFO*/*rstblk*/*PRE}]
  set_false_path -from [get_cells -hierarchical -filter {NAME =~*I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/CACHE_ENABLE*/*rstblk*/*rst_reg_reg[*]}]
  set_false_path -to [get_pins -hierarchical -filter {NAME =~*I_MM2S_<=:$text:>_WRAPPER/I_CMD_STATUS/CACHE_ENABLE*/*rstblk*/*PRE}]
<: } :>
<: } :>
<: if {$enable_s2mm} { :>
<: if {$is_us_device == 0} { :>
  set_false_path -from [get_cells -hierarchical -filter {NAME =~*INCLUDE_S2MM_GATE*/*rstblk*/*rst_reg_reg[*]}]
  set_false_path -to [get_pins -hierarchical -filter {NAME =~*INCLUDE_S2MM_GATE*/*rstblk*/*PRE}]
  set_false_path -from [get_cells -hierarchical -filter {NAME =~*I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/CACHE_ENABLE*/*rstblk*/*rst_reg_reg[*]}]
  set_false_path -to [get_pins -hierarchical -filter {NAME =~*I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/CACHE_ENABLE*/*rstblk*/*PRE}]
<: } else { :>
  set_false_path -from [get_cells -hierarchical -filter {NAME =~*INCLUDE_S2MM_GATE*/*rstblk*/*rst_reg_reg[*]}]
  set_false_path -to [get_pins -hierarchical -filter {NAME =~*INCLUDE_S2MM_GATE*/*rstblk*/*PRE}]
  set_false_path -from [get_cells -hierarchical -filter {NAME =~*I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/CACHE_ENABLE*/*rstblk*/*rst_reg_reg[*]}]
  set_false_path -to [get_pins -hierarchical -filter {NAME =~*I_S2MM_<=:$text:>_WRAPPER/I_CMD_STATUS/CACHE_ENABLE*/*rstblk*/*PRE}]
<: } :>
<: } :>
<: } :>
<: } else { :>
# Design is synchronous. No constraints needed in this mode.
<: if {$enable_mm2s} { :>
<: } :>
<: if {$enable_s2mm} { :>
<: } :>
<: if {$enable_sg} { :>
<: } :>
<: if {$mult_ch} { :>
<: if {$enable_mm2s} { :>
<: if {$is_us_device == 0} { :>
  set_false_path -from [get_cells -hierarchical -filter {NAME =~*TDEST_FIFO.I_INFO_FIFO*/*rstblk*/*rst_reg_reg[*]}]
  set_false_path -to [get_pins -hierarchical -filter {NAME =~*TDEST_FIFO.I_INFO_FIFO*/*rstblk*/*PRE}]
<: } else { :>
  set_false_path -from [get_cells -hierarchical -filter {NAME =~*TDEST_FIFO.I_INFO_FIFO*/*rstblk*/*rst_reg_reg[*]}]
  set_false_path -to [get_pins -hierarchical -filter {NAME =~*TDEST_FIFO.I_INFO_FIFO*/*rstblk*/*PRE}]
<: } :>

<: } :>
<: if {$enable_s2mm} { :>
<: if {$is_us_device == 0} { :>
  set_false_path -from [get_cells -hierarchical -filter {NAME =~*INCLUDE_S2MM_GATE*/*rstblk*/*rst_reg_reg[*]}]
  set_false_path -to [get_pins -hierarchical -filter {NAME =~*INCLUDE_S2MM_GATE*/*rstblk*/*PRE}]
<: } else { :>
  set_false_path -from [get_cells -hierarchical -filter {NAME =~*INCLUDE_S2MM_GATE*/*rstblk*/*rst_reg_reg[*]}]
  set_false_path -to [get_pins -hierarchical -filter {NAME =~*INCLUDE_S2MM_GATE*/*rstblk*/*PRE}]
<: } :>

<: } :>
<: } :>

<: } :>
<: } else { :>
<: if { $enable_async || $mult_ch} { :>
<: if {$enable_async} { :>
## INFO: Level CDC Crossing in AXI DMA
  set_false_path -to [get_pins -hier *cdc_to*/D]
<: } :>
  set_false_path -to [get_pins -hierarchical -filter {NAME =~*/*rstblk*/*CLR}]
  set_false_path -from [get_cells -hierarchical -filter {NAME =~*/*rstblk*/*rst_reg_reg[*]}]
  set_false_path -to [get_pins -hierarchical -filter {NAME =~*/*rstblk*/*PRE}]

<: } :>
<: } :>
